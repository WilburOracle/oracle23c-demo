-- create user ouser identified by BotWelcome123##;
-- grant create session,create table,create sequence  to ouser;
-- grant unlimited tablespace to ouser;
-- grant CREATE MINING MODEL, CREATE TABLE, CREATE VIEW TO ouser;
-- GRANT CREATE ANY PROCEDURE TO ouser;

-- 使用ouser 登录

-- Change it to sharded table. Shard key is COUNTRY_CODE. 
-- value list of COUNTRY_CODE is ('SG', 'IN', 'AU)
CREATE TABLE  "ONLINE_ORDER_ITEMS" 
   (	
   "COUNTRY_CODE" VARCHAR2(50), 
	"ORDER_DATETIME" TIMESTAMP (6), 
	"LINE_ID" VARCHAR2(50), 
	"QUANTITY" NUMBER, 
	"ITEM_ID" VARCHAR2(50), 
	"AMOUNT" NUMBER, 
	"ORDER_ID" VARCHAR2(50), 
	"LATITUDE" NUMBER, 
	"LONGITUDE" NUMBER,
	CONSTRAINT "ONLINE_ORDER_ITEMS_PK" PRIMARY KEY ("ORDER_ID", "ITEM_ID")
   ) 
/

-- Change it to sharded table. Shard key is COUNTRY_CODE. 
-- value list of COUNTRY_CODE is ('SG', 'IN', 'AU)
CREATE TABLE  "CUSTOMER_ORDER" 
   (	
   "NAME" VARCHAR2(50), 
	"PHONE" VARCHAR2(50), 
	"LOCATION" VARCHAR2(500), 
	"CARD" VARCHAR2(50), 
	"COUNTRY_CODE" VARCHAR2(50),
	"ORDER_ID" VARCHAR2(50),
	CONSTRAINT "CUSTOMER_ORDER_PK" PRIMARY KEY ("ORDER_ID")
   )
/

-- Change it to sharded table. Shard key is COUNTRY_CODE. 
-- value list of COUNTRY_CODE is ('SG', 'IN', 'AU)
CREATE TABLE  "ONLINE_STORES" 
   (	"PK_COL" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"LATITUDE" NUMBER, 
	"LONGITUDE" NUMBER, 
	"PIN_CODE" NUMBER, 
	"STORE_ADDRESS" VARCHAR2(256), 
	"STORE_NAME" VARCHAR2(64), 
	"COUNTRY_CODE" VARCHAR2(50), 
	 CONSTRAINT "ONLINE_STORES_1_PK" PRIMARY KEY ("PK_COL")
  USING INDEX  ENABLE
   )
/

-- PRODUCTS is a replicated table.
CREATE TABLE  "PRODUCTS" 
   (	
   "NAME" VARCHAR2(50)  NOT NULL ENABLE, 
	"PRICE" NUMBER, 
	"CURRENCY" VARCHAR2(10), 
	"IMAGE" VARCHAR2(500), 
	 CONSTRAINT "PRODUCTS_PK" PRIMARY KEY ("NAME")
  USING INDEX  ENABLE
   ); 


insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('cherries', 17.5, '$', 'cherries.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('sandwich', 19.99, '$', 'sandwich.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('steak', 12.00, '$', 'steak.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('popsicle', 1.99, '$', 'popsicle.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('pasta', 10.99, '$', 'pasta.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('salmon', 14.00, '$', 'salmon.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('croissant', 10.00, '$', 'croissant.jpg');
insert into PRODUCTS(NAME, PRICE, CURRENCY, IMAGE) values ('pepsi', 1.99, '$', 'pepsi.jpg');
commit;

insert into ONLINE_STORES(country_code, pk_col, pin_code, store_address, store_name, LATITUDE, LONGITUDE) VALUES ('SG', 110, 247911, '29 Tanglin Road, Lobby Floor, St. Regis Hotel, Singapore 247911', 'yellowstore',1.3428,103.8854);
insert into ONLINE_STORES(country_code, pk_col, pin_code, store_address, store_name, LATITUDE, LONGITUDE) VALUES ('SG', 4, 178882, '122 Windsor Park Rd, Singapore 574182', 'bluestore', 1.3557, 103.8243);
insert into ONLINE_STORES(country_code, pk_col, pin_code, store_address, store_name, LATITUDE, LONGITUDE) VALUES ('AU', 97, 228208, '204 Sussex St, Sydney NSW 2000, ANZtralia', 'freshstore', -33.8714, 151.2043);
insert into ONLINE_STORES(country_code, pk_col, pin_code, store_address, store_name, LATITUDE, LONGITUDE) VALUES ('AU', 48, 88461, '163 Crown St, Darlinghurst NSW 2010, ANZtralia', 'seastore', -33.8768, 151.2155);
insert into ONLINE_STORES(country_code, pk_col, pin_code, store_address, store_name, LATITUDE, LONGITUDE) VALUES ('IN', 53, 18972, 'MTNL Rd, Saki Naka, Mumbai, Maharashtra 400072, India', 'organicstore', 19.1005, 72.8812);
insert into ONLINE_STORES(country_code, pk_col, pin_code, store_address, store_name, LATITUDE, LONGITUDE) VALUES ('IN', 50, 18956, '3RGW+7XH Mumbai, Maharashtra, India', 'onlinestore', 19.0757, 72.8475);
commit;

insert into user_sdo_geom_metadata (table_name, column_name, diminfo, srid)
values (
  'ONLINE_STORES',
  'OUSER.GET_GEOMETRY("LONGITUDE","LATITUDE")',
  sdo_dim_array(
    sdo_dim_element ('Longitude', -180, 180, 0.5),
    sdo_dim_element ('Latitude', -90, 90, 0.5)
  ),
  4326
);
commit;


create or replace FUNCTION GET_GEOMETRY (
      IN_LONGITUDE NUMBER,
      IN_LATITUDE  NUMBER
  ) RETURN SDO_GEOMETRY
      DETERMINISTIC PARALLEL_ENABLE
  IS
  BEGIN
   IF (IN_LONGITUDE IS NOT NULL 
      AND IN_LONGITUDE BETWEEN -180 AND 180
      AND IN_LATITUDE IS NOT NULL 
      AND IN_LATITUDE BETWEEN -90 AND 90)
   THEN
    RETURN 
      SDO_GEOMETRY(
        2001, 
        4326, 
        SDO_POINT_TYPE(IN_LONGITUDE, IN_LATITUDE, NULL), 
        NULL, NULL);
    ELSE RETURN NULL;
    END IF;
  END;
 /

CREATE INDEX "SPIDX_ONLINE_S" ON ONLINE_STORES (GET_GEOMETRY("LONGITUDE","LATITUDE")) INDEXTYPE IS "MDSYS"."SPATIAL_INDEX_V2"  PARAMETERS ('layer_gtype=POINT cbtree_index=true');
/


CREATE JSON RELATIONAL DUALITY VIEW order_dv AS
  SELECT JSON {'orderId' : o.order_id,
               'name'   : o.name,
               'phone' : o.phone,
               'location' : o.location,
               'card' : o.card,
               'countryCode' : o.country_code,
               'items' :
                 [ SELECT JSON {'itemId' : i.item_id,
                                'countryCode'     : i.COUNTRY_CODE,
                                'orderDateTime'     : i.ORDER_DATETIME,
                                'lineId'     : i.LINE_ID,
                                'quantity'     : i.QUANTITY,
                                'amount'     : i.AMOUNT,
                                'orderId'     : i.ORDER_ID,
                                'latitude'     : i.LATITUDE,
                                'longitude'   : i.LONGITUDE}
                     FROM online_order_items i WITH INSERT UPDATE
                     WHERE i.order_id = o.order_id ]}
  FROM customer_order o WITH INSERT UPDATE DELETE;
  /
